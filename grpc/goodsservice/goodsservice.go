// Code generated by goctl. DO NOT EDIT.
// goctl 1.8.1
// Source: goodsrpc.proto

package goodsservice

import (
	"context"

	"grpc/goodsrpc"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	CheckGoodsRequest  = goodsrpc.CheckGoodsRequest
	CheckGoodsResponse = goodsrpc.CheckGoodsResponse

	GoodsService interface {
		CheckGoods(ctx context.Context, in *CheckGoodsRequest, opts ...grpc.CallOption) (*CheckGoodsResponse, error)
	}

	defaultGoodsService struct {
		cli zrpc.Client
	}
)

func NewGoodsService(cli zrpc.Client) GoodsService {
	return &defaultGoodsService{
		cli: cli,
	}
}

func (m *defaultGoodsService) CheckGoods(ctx context.Context, in *CheckGoodsRequest, opts ...grpc.CallOption) (*CheckGoodsResponse, error) {
	client := goodsrpc.NewGoodsServiceClient(m.cli.Conn())
	return client.CheckGoods(ctx, in, opts...)
}
